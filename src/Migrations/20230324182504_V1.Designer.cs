// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Permissions.API.DbContexts;

#nullable disable

namespace Permissions.API.Migrations
{
    [DbContext(typeof(PermissionContext))]
    [Migration("20230324182504_V1")]
    partial class V1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Permissions.API.Entities.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmployeeForename")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmployeeSurname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("PermissionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PermissionType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PermissionType");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeForename = "John",
                            EmployeeSurname = "Doe",
                            PermissionDate = new DateTime(2023, 3, 24, 13, 25, 4, 196, DateTimeKind.Local).AddTicks(3265),
                            PermissionType = 1
                        },
                        new
                        {
                            Id = 2,
                            EmployeeForename = "Mark",
                            EmployeeSurname = "Smith",
                            PermissionDate = new DateTime(2023, 3, 24, 13, 24, 4, 196, DateTimeKind.Local).AddTicks(3281),
                            PermissionType = 2
                        },
                        new
                        {
                            Id = 3,
                            EmployeeForename = "Jane",
                            EmployeeSurname = "Doe",
                            PermissionDate = new DateTime(2023, 3, 24, 13, 21, 4, 196, DateTimeKind.Local).AddTicks(3289),
                            PermissionType = 3
                        },
                        new
                        {
                            Id = 4,
                            EmployeeForename = "Mary",
                            EmployeeSurname = "Coptom",
                            PermissionDate = new DateTime(2023, 3, 24, 13, 20, 4, 196, DateTimeKind.Local).AddTicks(3290),
                            PermissionType = 4
                        },
                        new
                        {
                            Id = 5,
                            EmployeeForename = "John",
                            EmployeeSurname = "Carpenter",
                            PermissionDate = new DateTime(2023, 3, 24, 13, 15, 4, 196, DateTimeKind.Local).AddTicks(3292),
                            PermissionType = 1
                        });
                });

            modelBuilder.Entity("Permissions.API.Entities.PermissionTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("PermissionTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "FullControl"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Read"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Write"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Delete"
                        },
                        new
                        {
                            Id = 5,
                            Description = "List"
                        });
                });

            modelBuilder.Entity("Permissions.API.Entities.Permission", b =>
                {
                    b.HasOne("Permissions.API.Entities.PermissionTypes", "PermissionTypes")
                        .WithMany()
                        .HasForeignKey("PermissionType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PermissionTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
